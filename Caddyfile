{
	log default {
		level DEBUG
	}

	# Global configuration for a cerberus instance.
	cerberus {
		# Unique instance ID. You need to refer to the same instance ID in both the middleware and the handler directives.
		instance_id "instance-1"
		# Challenge difficulty (number of leading zeroes in the hash).
		difficulty 4
		# When set to true, the handler will drop the connection instead of returning a 403 if the IP is blocked.
		# drop
		# MaxPending is the maximum number of pending (and failed) requests.
		# Any IP block (prefix configured in prefix_cfg) with more than this number of pending requests will be blocked.
		max_pending 128
		# BlockTTL is the time to live for blocked IPs.
		block_ttl "24h"
		# PendingTTL is the time to live for pending requests when considering whether to block an IP.
		pending_ttl "1h"
		# MaxMemUsage is the maximum memory usage for the pending and blocklist caches.
		max_mem_usage "512MiB"
		# CookieName is the name of the cookie used to store signed certificate.
		cookie_name "cerberus-auth"
		# HeaderName is the name of the header used to store cerberus status ("PASS-BRIEF", "PASS-FULL", "BLOCK", "FAIL").
		header_name "X-Cerberus-Status"
		# Title is the title of the challenge page.
		title "Cerberus Challenge"
		# Description is the description of the challenge page.
		description "Making sure you're not a bot!"
		# Mail is the email address to contact for support.
		mail "admin@example.com"
		# PrefixCfg is to configure prefixes used to block users in these IP prefix blocks, e.g., /24 /64.
		# The first argument is for IPv4 and the second is for IPv6.
		prefix_cfg 20 64
	}
}

localhost {
	encode

	# You need to deploy a handler for each cerberus instance.
	# This route will be used to serve challenge endpoints and static files.
	handle_path /.cerberus/* {
		# The instance ID must match the one in the global configuration.
		cerberus_endpoint "instance-1"
	}

	@cerberus {
		path *.iso
		header User-Agent *Mozilla*
	}

	# This is the actual middleware that will be used to challenge requests.
	# You can attach a named matcher to the cerberus directive. Only requests matching the matcher will be challenged.
	# 
	# The instance ID must match the one in the global configuration.
	cerberus @cerberus "instance-1" {
		# The base URL for the challenge. It must be the same as the deployed endpoint route.
		base_url "/.cerberus"
	}

	handle / {
		respond "Hello, world!"
	}

	handle /foo {
		respond "Hello, foo!"
	}

	handle /foo.iso {
		respond "Hello, foo.iso!"
	}
}
